--- tigervnc-1.2.0/unix/xserver/hw/vnc/vncExtInit.cc~	2011-11-07 13:51:34.000000000 +0100
+++ tigervnc-1.2.0/unix/xserver/hw/vnc/vncExtInit.cc	2012-03-23 14:06:29.207547404 +0100
@@ -449,10 +449,9 @@
       ev.window = cur->window;
       ev.time = GetTimeInMillis();
       if (cur->client->swapped) {
-        int n;
-        swaps(&ev.sequenceNumber, n);
-        swapl(&ev.window, n);
-        swapl(&ev.time, n);
+        swaps(&ev.sequenceNumber);
+        swapl(&ev.window);
+        swapl(&ev.time);
       }
       WriteToClient(cur->client, sizeof(xVncExtClientCutTextNotifyEvent),
                     (char *)&ev);
@@ -495,9 +494,8 @@
       ev.sequenceNumber = cur->client->sequence;
       ev.window = cur->window;
       if (cur->client->swapped) {
-        int n;
-        swaps(&ev.sequenceNumber, n);
-        swapl(&ev.window, n);
+        swaps(&ev.sequenceNumber);
+        swapl(&ev.window);
       }
       WriteToClient(cur->client, sizeof(xVncExtQueryConnectNotifyEvent),
                     (char *)&ev);
@@ -538,10 +536,9 @@
       ev.window = cur->window;
       ev.selection = selection;
       if (cur->client->swapped) {
-        int n;
-        swaps(&ev.sequenceNumber, n);
-        swapl(&ev.window, n);
-        swapl(&ev.selection, n);
+        swaps(&ev.sequenceNumber);
+        swapl(&ev.window);
+        swapl(&ev.selection);
       }
       WriteToClient(cur->client, sizeof(xVncExtSelectionChangeNotifyEvent),
                     (char *)&ev);
@@ -562,7 +559,6 @@
   param.buf[stuff->paramLen] = 0;
 
   xVncExtSetParamReply rep;
-  int n;
   rep.type = X_Reply;
   rep.length = 0;
   rep.success = 0;
@@ -603,8 +599,8 @@
 
 deny:
   if (client->swapped) {
-    swaps(&rep.sequenceNumber, n);
-    swapl(&rep.length, n);
+    swaps(&rep.sequenceNumber);
+    swapl(&rep.length);
   }
   WriteToClient(client, sizeof(xVncExtSetParamReply), (char *)&rep);
   return (client->noClientException);
@@ -612,9 +608,8 @@
 
 static int SProcVncExtSetParam(ClientPtr client)
 {
-  register char n;
   REQUEST(xVncExtSetParamReq);
-  swaps(&stuff->length, n);
+  swaps(&stuff->length);
   REQUEST_AT_LEAST_SIZE(xVncExtSetParamReq);
   return ProcVncExtSetParam(client);
 }
@@ -628,7 +623,6 @@
   param.buf[stuff->paramLen] = 0;
 
   xVncExtGetParamReply rep;
-  int n;
   rep.type = X_Reply;
   rep.sequenceNumber = client->sequence;
   rep.success = 0;
@@ -646,9 +640,9 @@
   rep.length = (len + 3) >> 2;
   rep.valueLen = len;
   if (client->swapped) {
-    swaps(&rep.sequenceNumber, n);
-    swapl(&rep.length, n);
-    swaps(&rep.valueLen, n);
+    swaps(&rep.sequenceNumber);
+    swapl(&rep.length);
+    swaps(&rep.valueLen);
   }
   WriteToClient(client, sizeof(xVncExtGetParamReply), (char *)&rep);
   if (value)
@@ -659,9 +653,8 @@
 
 static int SProcVncExtGetParam(ClientPtr client)
 {
-  register char n;
   REQUEST(xVncExtGetParamReq);
-  swaps(&stuff->length, n);
+  swaps(&stuff->length);
   REQUEST_AT_LEAST_SIZE(xVncExtGetParamReq);
   return ProcVncExtGetParam(client);
 }
@@ -675,7 +668,6 @@
   param.buf[stuff->paramLen] = 0;
 
   xVncExtGetParamDescReply rep;
-  int n;
   rep.type = X_Reply;
   rep.sequenceNumber = client->sequence;
   rep.success = 0;
@@ -690,9 +682,9 @@
   rep.length = (len + 3) >> 2;
   rep.descLen = len;
   if (client->swapped) {
-    swaps(&rep.sequenceNumber, n);
-    swapl(&rep.length, n);
-    swaps(&rep.descLen, n);
+    swaps(&rep.sequenceNumber);
+    swapl(&rep.length);
+    swaps(&rep.descLen);
   }
   WriteToClient(client, sizeof(xVncExtGetParamDescReply), (char *)&rep);
   if (desc)
@@ -702,9 +694,8 @@
 
 static int SProcVncExtGetParamDesc(ClientPtr client)
 {
-  register char n;
   REQUEST(xVncExtGetParamDescReq);
-  swaps(&stuff->length, n);
+  swaps(&stuff->length);
   REQUEST_AT_LEAST_SIZE(xVncExtGetParamDescReq);
   return ProcVncExtGetParamDesc(client);
 }
@@ -715,7 +706,6 @@
   REQUEST_SIZE_MATCH(xVncExtListParamsReq);
 
   xVncExtListParamsReply rep;
-  int n;
   rep.type = X_Reply;
   rep.sequenceNumber = client->sequence;
 
@@ -731,9 +721,9 @@
   rep.length = (len + 3) >> 2;
   rep.nParams = nParams;
   if (client->swapped) {
-    swaps(&rep.sequenceNumber, n);
-    swapl(&rep.length, n);
-    swaps(&rep.nParams, n);
+    swaps(&rep.sequenceNumber);
+    swapl(&rep.length);
+    swaps(&rep.nParams);
   }
   WriteToClient(client, sizeof(xVncExtListParamsReply), (char *)&rep);
   rdr::U8* data = new rdr::U8[len];
@@ -753,9 +743,8 @@
 
 static int SProcVncExtListParams(ClientPtr client)
 {
-  register char n;
   REQUEST(xVncExtListParamsReq);
-  swaps(&stuff->length, n);
+  swaps(&stuff->length);
   REQUEST_SIZE_MATCH(xVncExtListParamsReq);
   return ProcVncExtListParams(client);
 }
@@ -778,11 +767,10 @@
 
 static int SProcVncExtSetServerCutText(ClientPtr client)
 {
-  register char n;
   REQUEST(xVncExtSetServerCutTextReq);
-  swaps(&stuff->length, n);
+  swaps(&stuff->length);
   REQUEST_AT_LEAST_SIZE(xVncExtSetServerCutTextReq);
-  swapl(&stuff->textLen, n);
+  swapl(&stuff->textLen);
   return ProcVncExtSetServerCutText(client);
 }
 
@@ -792,15 +780,14 @@
   REQUEST_SIZE_MATCH(xVncExtGetClientCutTextReq);
 
   xVncExtGetClientCutTextReply rep;
-  int n;
   rep.type = X_Reply;
   rep.length = (clientCutTextLen + 3) >> 2;
   rep.sequenceNumber = client->sequence;
   rep.textLen = clientCutTextLen;
   if (client->swapped) {
-    swaps(&rep.sequenceNumber, n);
-    swapl(&rep.length, n);
-    swapl(&rep.textLen, n);
+    swaps(&rep.sequenceNumber);
+    swapl(&rep.length);
+    swapl(&rep.textLen);
   }
   WriteToClient(client, sizeof(xVncExtGetClientCutTextReply), (char *)&rep);
   if (clientCutText)
@@ -810,9 +797,8 @@
 
 static int SProcVncExtGetClientCutText(ClientPtr client)
 {
-  register char n;
   REQUEST(xVncExtGetClientCutTextReq);
-  swaps(&stuff->length, n);
+  swaps(&stuff->length);
   REQUEST_SIZE_MATCH(xVncExtGetClientCutTextReq);
   return ProcVncExtGetClientCutText(client);
 }
@@ -842,12 +828,11 @@
 
 static int SProcVncExtSelectInput(ClientPtr client)
 {
-  register char n;
   REQUEST(xVncExtSelectInputReq);
-  swaps(&stuff->length, n);
+  swaps(&stuff->length);
   REQUEST_SIZE_MATCH(xVncExtSelectInputReq);
-  swapl(&stuff->window, n);
-  swapl(&stuff->mask, n);
+  swapl(&stuff->window);
+  swapl(&stuff->mask);
   return ProcVncExtSelectInput(client);
 }
 
@@ -893,9 +878,8 @@
   rep.length = 0;
   rep.sequenceNumber = client->sequence;
   if (client->swapped) {
-    int n;
-    swaps(&rep.sequenceNumber, n);
-    swapl(&rep.length, n);
+    swaps(&rep.sequenceNumber);
+    swapl(&rep.length);
   }
   WriteToClient(client, sizeof(xVncExtConnectReply), (char *)&rep);
   return (client->noClientException);
@@ -903,9 +887,8 @@
 
 static int SProcVncExtConnect(ClientPtr client)
 {
-  register char n;
   REQUEST(xVncExtConnectReq);
-  swaps(&stuff->length, n);
+  swaps(&stuff->length);
   REQUEST_AT_LEAST_SIZE(xVncExtConnectReq);
   return ProcVncExtConnect(client);
 }
@@ -925,7 +908,6 @@
     qcTimeout = 0;
 
   xVncExtGetQueryConnectReply rep;
-  int n;
   rep.type = X_Reply;
   rep.sequenceNumber = client->sequence;
   rep.timeout = qcTimeout;
@@ -934,11 +916,11 @@
   rep.opaqueId = (CARD32)(long)queryConnectId;
   rep.length = (rep.userLen + rep.addrLen + 3) >> 2;
   if (client->swapped) {
-    swaps(&rep.sequenceNumber, n);
-    swapl(&rep.userLen, n);
-    swapl(&rep.addrLen, n);
-    swapl(&rep.timeout, n);
-    swapl(&rep.opaqueId, n);
+    swaps(&rep.sequenceNumber);
+    swapl(&rep.userLen);
+    swapl(&rep.addrLen);
+    swapl(&rep.timeout);
+    swapl(&rep.opaqueId);
   }
   WriteToClient(client, sizeof(xVncExtGetQueryConnectReply), (char *)&rep);
   if (qcTimeout)
@@ -950,9 +932,8 @@
 
 static int SProcVncExtGetQueryConnect(ClientPtr client)
 {
-  register char n;
   REQUEST(xVncExtGetQueryConnectReq);
-  swaps(&stuff->length, n);
+  swaps(&stuff->length);
   REQUEST_SIZE_MATCH(xVncExtGetQueryConnectReq);
   return ProcVncExtGetQueryConnect(client);
 }
@@ -977,10 +958,9 @@
 
 static int SProcVncExtApproveConnect(ClientPtr client)
 {
-  register char n;
   REQUEST(xVncExtApproveConnectReq);
-  swaps(&stuff->length, n);
-  swapl(&stuff->opaqueId, n);
+  swaps(&stuff->length);
+  swapl(&stuff->opaqueId);
   REQUEST_SIZE_MATCH(xVncExtApproveConnectReq);
   return ProcVncExtApproveConnect(client);
 }
--- tigervnc-1.2.0/unix/xserver/hw/vnc/xorg-version.h~	2012-03-23 13:48:15.281937484 +0100
+++ tigervnc-1.2.0/unix/xserver/hw/vnc/xorg-version.h	2012-03-23 14:08:49.217553722 +0100
@@ -38,6 +38,8 @@
 #define XORG 110
 #elif XORG_VERSION_CURRENT < ((1 * 10000000) + (11 * 100000) + (99 * 1000))
 #define XORG 111
+#elif XORG_VERSION_CURRENT < ((1 * 10000000) + (12 * 100000) + (99 * 1000))
+#define XORG 112
 #else
 #error "X.Org newer than 1.10 is not supported"
 #endif
